#! /bin/bash

#########THIS part is for Nagios ################################
PROGNAME=`/usr/bin/basename $0`
PROGPATH=`echo $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION=`echo '$Revision: 1749 $' | sed -e 's/[^0-9.]//g'`
. $PROGPATH/utils.sh

#####################################################################

#Function to print Usage
function usage
{
echo "Usage: $0 -s [apiserver endpoint]"
exit $STATE_UNKNOWN
}

APISERVER=https://kubernetes.default.svc
#####################################################################
# get parameter values in Variables

while test -n "$1"; do
    case "$1" in
         -h)
            usage
            ;;
         -s)
            APISERVER=$2
            shift
            ;;
         *)
            echo "Unknown argument: $1"
            usage
            ;;
    esac
    shift
done

#####################################################################

# check via kubectl
set -euo pipefail

TOKEN=$(cat /run/secrets/kubernetes.io/serviceaccount/token)
KUBECTL="kubectl --server $APISERVER --token $TOKEN --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt"

# "devices.kubevirt.io/kvm":"1k"
KVM=$( $KUBECTL kubectl get nodes scott01 -o json -o=jsonpath="{.status.allocatable['devices\.kubevirt\.io/kvm']}" )
if [ "$KVM" != "1k" ]; then
        echo "[CRIT] $KVM kvms are avaiable"
        exit $STATE_CRITICAL
fi

# "devices.kubevirt.io/tun":"1k"
TUN=$( $KUBECTL kubectl get nodes scott01 -o json -o=jsonpath="{.status.allocatable['devices\.kubevirt\.io/tun']}" )
if [ "$TUN" != "1k" ]; then
        echo "[CRIT] $TUN tun interfaces are avaiable"
        exit $STATE_CRITICAL
fi

# "devices.kubevirt.io/vhost-net":"1k"
VHOST_NET=$( $KUBECTL kubectl get nodes scott01 -o json -o=jsonpath="{.status.allocatable['devices\.kubevirt\.io/vhost-net']}" )
if [ "$TUN" != "1k" ]; then
        echo "[CRIT] $VHOST_NET vhost-net interfaces are avaiable"
        exit $STATE_CRITICAL
fi

echo "[OK] all kvm resources look healthy"
exit $STATE_OK
